"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
// Magic button
var button = document.getElementById('button');
button.addEventListener('mouseenter', function () {
  var _loop = function _loop() {
    var spark = document.createElement('i');
    spark.classList.add('spark');
    // Рэндомная позиция
    var randomX = (Math.random() - 0.5) * window.innerWidth;
    var randomY = (Math.random() - 0.5) * window.innerHeight;
    spark.style.setProperty('--x', randomX + 'px');
    spark.style.setProperty('--y', randomY + 'px');

    // Рэндомный размер
    var randomSize = Math.random() * 8 + 2;
    spark.style.width = randomSize + 'px';
    spark.style.height = randomSize + 'px';
    var duration = Math.random() * 2 + 0.5;
    spark.style.animation = 'animate ${duration}s ease-out forwards';

    // Добавляем пузырики
    button.appendChild(spark);
    // Удаляем пузырики
    setTimeout(function () {
      spark.remove();
    }, 2000);
  };
  for (var i = 0; i < 50; i++) {
    _loop();
  }
});

// 3D вращение
// VanillaTilt.init(document.querySelectorAll(".sci li a"), {
// 	max: 25,
// 	speed: 400,
// 	glare: true,
// 	"max-glare": 1,
// });

// SWIPER
var swiper = new Swiper('.swiper-container', _defineProperty(_defineProperty(_defineProperty(_defineProperty({
  effect: 'cards',
  grabCursor: true,
  centeredSlides: true,
  slidesPerView: 'auto',
  slidesOffsetBefore: 50,
  spaceBetween: 20,
  mousewheel: true
}, "slidesPerView", 1), "coverflowEffect", {
  rotate: 0,
  stretch: 0,
  depth: 200,
  modifier: 1,
  slideShadows: true
}), "loop", true), "autoplay", {
  delay: 4000,
  disableOnInteraction: false
}));

// toggle MENU
var toggle = document.querySelector('.toggle');
var nav = document.querySelector('.header__menu');
toggle.onclick = function () {
  toggle.classList.toggle('active');
  nav.classList.toggle('active');
};

// Видео 
function toggleV() {
  var trailer = document.querySelector('.trailer');
  var video = document.querySelector('video');
  trailer.classList.toggle('active-video');
  video.currentTime = 0;
  video.pause();
}
;

// Движение мышью с кругом
document.querySelectorAll('.about__text').forEach(function (box) {
  box.addEventListener('mousemove', function (e) {
    var x = e.pageX - box.offsetLeft;
    var y = e.pageY - box.offsetTop;
    document.querySelectorAll('span').forEach(function (span) {
      span.style.left = x + 'px';
      span.style.top = y + 'px';
    });
  });
});

// Пузырьки на заднем фоне
function createBuble() {
  var section = document.querySelector('.service');
  var createElement = document.createElement('span');
  var size = Math.random() * 60;
  createElement.style.width = 20 + size + 'px';
  createElement.style.height = 20 + size + 'px';
  createElement.style.left = Math.random() * innerWidth + 'px';
  section.appendChild(createElement);
  setTimeout(function () {
    createElement.remove();
  }, 4000);
}
setInterval(createBuble, 50);

// Полоски на кнопки с городами
document.addEventListener('DOMContentLoaded', function () {
  var btnsLi = document.querySelectorAll('nav.address-nav ul li');
  btnsLi.forEach(function (btnLi) {
    var spans = [];
    for (var i = 0; i < 40; i++) {
      var span = document.createElement('span');
      span.style.top = "".concat(i * 2, "px");
      spans.push(span);
      btnLi.appendChild(span);
      var randomDelay = Math.random() * 0.75 + 0;
      span.style.transitionDelay = randomDelay + 's';
    }
  });
});

// Фильтрация городов
var filterAddressCard = document.querySelectorAll('.address__card');
document.querySelector('nav.address-nav').addEventListener('click', function (event) {
  if (event.target.tagName !== 'LI') return false;
  var filterClass = event.target.dataset['f'];
  filterAddressCard.forEach(function (elem) {
    elem.classList.remove('hide');
    if (!elem.classList.contains(filterClass) && filterClass !== 'all') {
      elem.classList.add('hide');
    }
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,